jQuery(function($) {    window.oc = { };        /**     * NOTIFICATION HTML PLUGIN     * @param {string} [type='info'] muted|primary|success|info|warning|danger|false.     * @param {string} [msg='<strong class="glyphicon glyphicon-exclamation-sign"></strong>']     * @returns {jQuery}     */    oc.notification = function(type, msg) {        return $('<div class="row"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="alert alert-dismissable alert-' + (type || 'info') + '" role="alert"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>' + (msg || '<strong class="glyphicon glyphicon-exclamation-sign"></strong>') + '</div></div></div>').find('a').addClass('alert-link').end();    };    /**     * NOTICE HTML PLUGIN     * @param {string} [type='info'] muted|primary|success|info|warning|danger|false.     * @param {string} [msg='<strong class="glyphicon glyphicon-exclamation-sign"></strong>']     * @returns {jQuery}     */    oc.notice = function(type, msg) {        return '<span class="text-' + (type || 'info') + '" role="status">' + (msg || '<strong class="glyphicon glyphicon-exclamation-sign"></strong>') + '</span>';    };    /**     * SCROLL BODY JQUERY PLUGIN     * @param {string|number} [duration="slow"] slow|fast|ms.     * @returns {object}     */    $.fn.scrollBody = function(duration) {        var scrollTop = Math.max($('html, body').scrollTop(), $('body').scrollTop());        var top = $(this).offset().top;                if (top < scrollTop || top > scrollTop + $(window).height()) {            $('html, body').animate({ scrollTop: top }, (duration || 'slow'));        }                return this;    };    /**     * SHOW ELEMENT IN RIGHT TOP CORNER     * @param {string} [type='info'] muted|primary|success|info|warning|danger|false.     * @param {string} [msg='<strong class="glyphicon glyphicon-exclamation-sign"></strong>']     * @param {string}[duration="fast"] slow|fast|ms.     * @returns {jQuery}     */    $.fn.showTopRight = function(type, msg, top, duration) {        $(this).html(oc.notification(type, msg));        var nwidth = $(this).width();        $(this).css(            {                'position':'fixed',                'top':(top || '80')+'px',                'right':'-'+nwidth+'px',                'z-index':1001            });        $(this).animate({ right: 0 }, ( duration || 'fast'));        return this;    };    /**     * FORM INPUT STATE JQUERY PLUGIN     * @param {string|boolean} [state] success|warning|error|none|disabled|false.     * @returns {object}     */    $.fn.state = function(state) {        var $this = $(this);        $this.removeClass('sr-only has-success has-warning has-error').attr('disabled', false);        if (state === 'none') {            $this.addClass('sr-only');        } else if(state === 'success' || state === 'warning' || state === 'error') {            $this.addClass('has-' + state);        } else if(state === 'disabled') {            $this.attr('disabled', true);        }        return this;    };    /**     * FORM DATA STORAGE JQUERY PLUGIN     * @param {object} [settings]     * @config {string} [prefix='']     * @config {boolean} [check=false]     * @returns {object}     */    $.fn.formStorage = function(settings) {        if (!window.sessionStorage) return this;                var prefix = settings && settings.prefix || '';        var check = settings && settings.check || false;                $(':input[name]:not([name="captcha"], :password, :button, :submit, :reset, .nostorage)', this)            .each(function() {                var data = window.sessionStorage.getItem(prefix + this.name);                                if (data !== null && data !== undefined) {                    if (this.type === 'checkbox') {                        this.checked = (data == 'true');                    } else if (this.type === 'radio') {                        this.checked = (this.value == data);                    } else if (this.type === 'select-multiple' && this.multiple) {                        data = JSON.parse(data);                        for (var i = 0; i < this.length; i++) {                            this[i].selected = ($.inArray(this[i].value, data) !== -1);                        }                    } else {                        this.value = data;                    }                }            })            .change(function() {                var name = prefix + this.name;                                if (this.type === 'checkbox') {                    if (this.name.search('\\[\\]') !== this.name.length - 2) {                        window.sessionStorage.setItem(name, this.checked);                    }                } else if (this.type === 'select-multiple' && this.multiple) {                    window.sessionStorage.setItem(name, JSON.stringify($.map(this, function(i) { return i.selected ? i.value : null; })));                } else if(!check || !this.value || !this.getAttribute('required') === undefined || (!this.getAttribute('pattern') && !this.getAttribute('data-pattern')) || new RegExp(this.getAttribute('pattern') || this.getAttribute('data-pattern')).test($.trim(this.value))) {                    window.sessionStorage.setItem(name, this.value);                }            });                return this;    };        /**     * ATTRIBUTE SUPPORT     * @param {string} tag Html tag name.     * @param {string} attribute Html tag attribute name.     * @returns {boolean}     */    oc.attributeSupport = function(tag, attribute) {        return (attribute in document.createElement(tag));    };        /**     * STYLE SUPPORT     * @param {string} tag Html tag name.     * @param {string} property Css property name.     * @param {object|string|boolean} [vendor] Browser vendor prefix.     * @returns {boolean}     */    oc.styleSupport = function(tag, property, vendor) {        if (vendor) {            var prefix = (vendor === true) ? ['', '-webkit-', '-moz-', '-ms-', '-o-'] : [''].concat(vendor);            var styles = document.createElement(tag).style;                        for (var i = 0; i < prefix.length; i++) {                if (prefix[i] + property in styles) return true;            }                        return false;        } else {            return (property in document.createElement(tag).style);        }    };        /** INPUT SUPPORT */    oc.inputSupport = new function() {        if (window.sessionStorage && window.sessionStorage.inputSupport) {            var support = JSON.parse(window.sessionStorage.inputSupport);        } else {            var support = {                'color': false,                'date': false,                'datetime': false,                'datetime-local': false,                'email': false,                'month': false,                'number': false,                'range': false,                'search': false,                'tel': false,                'time': false,                'url': false,                'week': false            };                        var input = document.createElement('input');                        for (var type in support) {                input.setAttribute('type', type);                                if (input.type === type) support[type] = true;            }                        if (window.sessionStorage) window.sessionStorage.inputSupport = JSON.stringify(support);        }                return function(type) { return support[type]; };    };        /**     * INPUT SUPPORT JQUERY PLUGIN     * @param {string|object} [type] Input type 'search' || ['search', 'datetime', 'datetime-local', ...].     * @returns {object}     */    $.fn.inputSupport = function(type) {        if (type) {            if (typeof type === 'object') {                for (var i in type) {                    if (oc.inputSupport(type[i]) === false) {                        $('input[type="' + type[i] + '"]', this).each(function() {                            $this = $(this);                            $this.after($this.clone().attr('type', 'text')).remove();                        });                    }                }            } else {                if (oc.inputSupport(type) === false) {                    $('input[type="' + type + '"]', this).each(function() {                        $this = $(this);                        $this.after($this.clone().attr('type', 'text')).remove();                    });                }            }        } else {            var type = ['color', 'date', 'datetime', 'datetime-local', 'email', 'month', 'number', 'range', 'search', 'tel', 'time', 'url', 'week'];                        for (var i = 0; i < type.length; i++) {                if (!oc.inputSupport(type[i])) {                    $('input[type="' + type[i] + '"]', this).each(function() {                        $this = $(this);                        $this.after($this.clone().attr('type', 'text')).remove();                    });                }            }        }                return this;    };        /** MODAL BT PLUGIN */    oc.modal = {        /** Modal container */        container: '#modal',                /**         * Modal title & body html         * @param {object} [data]         * @config {string} [title='']         * @config {string} [html='']         * @returns {object}         */        html: function(data) {            $this = $(this.container);                        if (data) {                $this                    .find('h4.modal-title').html(data.title || '').end()                    .find('div.modal-body').html(data.html || '');            }                        return this;        },                /**         * Modal show         * @returns {object}         */        show: function() {            $(this.container).modal('show');                        return this;        },                /**         * Modal hide         * @returns {object}         */        hide: function() {            $(this.container).modal('hide');                        return this;        },                /**         * Modal empty title & body         * @returns {object}         */        empty: function() {            $(this.container).find('h4.modal-title, div.modal-body').empty();                        return this;        }    };        /** Bind modal empty on hidden */    $(oc.modal.container).on('hidden.bs.modal', oc.modal.empty);    /**     * IMAGES SLIDE HTML PLUGIN     * @param {object} data     * @config {object} images [{ alt: string, src: string }, ...]     * @config {number} item Index of data.images.     * @returns {jQuery} html     */    oc.slides = function(data) {        var self = this;                data.item = data.item || 0;                /** show previous slide */        function prev() {            if (data.item < 1) {                slide(data.images.length - 1);            }            else {                slide(data.item - 1);            }        }        /** show next slide */        function next() {            if (data.item < data.images.length - 1) {                slide(data.item + 1);            }            else {                slide(0);            }        }        /** set slide */        function slide(item) {            html.children('img').attr({                src: data.images[item].src || '',                alt: data.images[item].alt || ''            });            data.item = item;        }        /** html */        var html = $(            '<div class="nowrap" style="width: 100%;">' +                '<a class="text-muted" style="position: absolute; left: 8px; top: 48%; font-size: 20px; opacity: 0.2; filter: alpha(opacity=20);"><span class="glyphicon glyphicon-chevron-left"></span></a>' +                '<img class="img-responsive" src="" alt="" style="margin: 0 auto; cursor: pointer;" />' +                '<a class="text-muted" style="position: absolute; right: 8px; top: 48%; font-size: 20px; opacity: 0.2; filter: alpha(opacity=20);"><span class="glyphicon glyphicon-chevron-right"></span></a>' +            '</div>'        );        /** bind prev button */        html.children('a:first').click(prev);        /** bind next button */        html.children('a:last').click(next);        /** bind click on image */        html.children('img').on({            click: function(e) {                if (e.offsetX < $(this).width() / 2) {                    prev();                } else {                    next();                }            },            mousemove: function(e) {                if (e.offsetX < $(this).width() / 2) {                    html.children('a:first').css({ opacity: '0.6', filter: 'alpha(opacity=60)' });                    html.children('a:last').css({ opacity: '0.2', filter: 'alpha(opacity=20)' });                } else {                    html.children('a:first').css({ opacity: '0.2', filter: 'alpha(opacity=20)' });                    html.children('a:last').css({ opacity: '0.6', filter: 'alpha(opacity=60)' });                }            },            mouseleave: function() {                html.children('a').css('opacity', '0.2');            }        });        /** init */        slide(data.item);        return html;    };        /** BIND GLOBAL */    window.notification = oc.notification;    window.notice = oc.notice;    window.attributeSupport = oc.attributeSupport;    window.styleSupport = oc.styleSupport;    window.inputSupport = oc.inputSupport;    window.modal = oc.modal;    window.slides = oc.slides;});